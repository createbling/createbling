<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.createbling.modules.sys.dao.MenuDao">
	
	<sql id="menuColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.name,
		a.href,
		a.target,
		a.icon,
		a.sort,
		a.is_show,
		a.permission,
		a.description,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.flag,
		p.name AS "parent.name"
	</sql>
	
	<sql id="menuJoins">
        <!-- 将menu与menu相连接找出其直接parent -->
		LEFT JOIN sys_menu p ON p.id = a.parent_id
    </sql>
	
	<select id="get" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM sys_menu a
		<include refid="menuJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findAllList" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM sys_menu a
		<include refid="menuJoins"/>
		WHERE a.flag != #{DEL_FLAG_DELETE} 
		ORDER BY a.sort
	</select>
	
	<select id="findByParentIdsLike" resultType="Menu">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM sys_menu a
		WHERE a.flag != #{DEL_FLAG_DELETE}  AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.sort
	</select>
	
	<select id="findByUserId" resultType="Menu">
		SELECT DISTINCT
			<include refid="menuColumns"/>
		FROM sys_menu a
		<!-- 找出父节点 -->
		LEFT JOIN sys_menu p ON p.id = a.parent_id
		<!-- 找出角色对应的role-menu -->
		JOIN sys_role_menu rm ON rm.menu_id = a.id
		<!-- 找出对应的角色信息 -->
		JOIN sys_role r ON r.id = rm.role_id AND r.useable='1'
		<!-- 角色-用户 -->
		JOIN sys_user_role ur ON ur.role_id = r.id
		<!-- 对应的用户，并找出所需要的用户 -->
		JOIN sys_user u ON u.id = ur.user_id AND u.id = #{userId}
		WHERE a.flag != #{DEL_FLAG_DELETE}  AND r.flag != #{DEL_FLAG_DELETE} AND u.flag != #{DEL_FLAG_DELETE} 
		ORDER BY a.sort
	</select>
	
	<insert id="insert">
		INSERT INTO sys_menu(
			id, 
			parent_id, 
			parent_ids, 
			name, 
			href, 
			target, 
			icon, 
			sort, 
			is_show, 
			permission, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			description, 
			flag
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{name}, 
			#{href}, 
			#{target}, 
			#{icon}, 
			#{sort}, 
			#{isShow}, 
			#{permission}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{description}, 
			#{flag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			name = #{name}, 
			href = #{href}, 
			target = #{target}, 
			icon = #{icon}, 
			sort = #{sort}, 
			is_show = #{isShow}, 
			permission = #{permission}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			description = #{description}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="updateSort">
		UPDATE sys_menu SET 
			sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_menu m SET 
			m.flag = #{DEL_FLAG_DELETE}
		WHERE m.id = #{id} OR m.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
</mapper>